name: Build and Containerize .NET Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '5.0'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push the Docker image
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: binuyasas/devops-challenge-salesapi:${{ github.sha }}

      # Optionally list images (for debugging purposes)
      - name: List Docker images
        run: docker images

    #- name: Build Docker image
    #  run: |
    #    docker buildx build \
    #      --platform linux/amd64 \
    #      -t binuyasas/devops-challenge-salesapi:${{ github.sha }} \
    #      -f Dockerfile .
    #    docker images
#
    #- name: List Docker images
    #  run: docker images    
#
    #- name: Push Docker image to DockerHub (optional)
    #  run: |
    #    echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
    #    docker push binuyasas/devops-challenge-salesapi:${{ github.sha }}